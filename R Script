senP<-function(x,y,reps){ #defines the function arguments. x are the x values from the thiel-sen slope, y are the y values from the thiel-sen slope, and reps are the number of repetitions to use for the bootstrap.
  slopes<-zyp.sen(y~x)$slopes #finds all pairwise slopes from the thiel-sen regression
  intercepts<-zyp.sen(y~x)$intercepts #finds all intercepts from the thiel-sen regression
  slope_ps<-vector('numeric') #assigns a blank vector to be filled in the following loop
  intercept_ps<-vector('numeric') #assigns a blank vector to be filled in the following loop
  n<-length(x) #determines the size of each sample of pairwise slopes to be used for calcualting the one-sample wilcox rank test.
  
  for (i in 1:reps){ #sets the number of repetitions defined in the third argument of the function
  slope_ps[i]<-wilcox.test(sample(slopes,size=n,replace=TRUE))$p.value #prints each p value to the previously blank vector
  intercept_ps[i]<-wilcox.test(sample(intercepts,size=n,replace=TRUE))$p.value #prints each p value to the previously blank vector
  }
  
  slope_p<-median(slope_ps) #the final p value for slope is calcalyted as the median p value from vector slope_p
  intercept_p<-median(intercept_ps) #the final p value for intercept is calculated as the median p value from vector intercept_p
  result <- list(slope_p=slope_p,intercept_p=intercept_p) #sets the result as list of the slope final p and the intercept final p
  return(result) #returns the result as an object to be accessed outside of the function
}
